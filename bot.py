import vk_api
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType 
from random import randint
import os
import tokens
import json
import pymysql

#BHS Server Log code
token = tokens.token
bhs_server_log = vk_api.VkApi(token=token)
peers = [2000000002]

def log(message):
    for peer in peers:
        bhs_server_log.method('messages.send', {'peer_id': peer, 'message': message, "random_id": randint(-2147483648, 2147483648)})
#Copyright 2019 BHS Studio

def write_msg(peer_id, message):
    vk.method('messages.send', {'peer_id': peer_id, 'message': message, "random_id": randint(-2147483648, 2147483648)})

def send_pic(peer_id, attachment, keyboard, like, dislike):
    vk.method('messages.send', {'peer_id': peer_id, 'message': f'‚ù§ –õ–∞–π–∫–∏: {like}\nüíî –î–∏–∑–ª–∞–π–∫–∏: {dislike}', 'keyboard': keyboard, 'attachment': attachment, "random_id": randint(-2147483648, 2147483648)})
def isAdmin(user_id):
    admins = os.listdir("./admins/")
    for admin in admins:
        if(str(user_id) == str(os.path.basename(admin))):
            return True
    return False

def get_button(label, color, payload="") :
    return {
        "action": {
            "type": "text",
            "payload": json.dumps(payload) ,
            "label": label
        },
        "color": color
    }

vk = vk_api.VkApi(
    token=tokens.token #–í—Å—Ç–∞–≤—å —Å–≤–æ–π 
)
connected_peers = []
peers = os.listdir("./admins/")
for peer in peers:
    connected_peers.append(int(os.path.basename(peer)))

longpoll = VkBotLongPoll(vk, tokens.groupID, wait = 259200) #–í—Å—Ç–∞–≤—å —Å–≤–æ–π ID –≥—Ä—É–ø–ø—ã –≤ –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ
hello = ["–ü—Ä–∏–≤–µ—Ç–∏–∫–∏)", "Hello", "üëãüèª", "–ü—Ä–∏–≤–µ—Ç!", "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–ü—Ä–∏–≤–µ—Ç–∏–∫–∏) –ó–Ω–∞–µ—à—å –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?) –ù–µ—Ç? –¢–æ–≥–¥–∞ –Ω–∞–ø–∏—à–∏ /help))"]
otvet = ["–î–∞)?", "–ú–º–º?", "–Ø –∑–Ω–∞—é, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å üòè", "–î–∞–π —É–≥–∞–¥–∞—Ç—å, –∑–∞—á–µ–º —Ç—ã –º–µ–Ω—è –∑o–≤–µ—à—å üòâ", "–î–∞?", "–°–ª—É—à–∞—é üòä", "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞ –Ω–µ –Ω–µ—Å–µ—Ç –Ω–∏–∫–∞–∫–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ!"]

#Load pic count
f = open("./pic", "r")
pic = int(f.read())
f.close()

#Load manga db
f = open("./manga", "r")
manga = []
for line in f.readlines():
    manga.append(line)
f.close()

likeboard = {
    "inline": True, 
    "buttons": [
        [
            get_button(label="Like", color="positive"),    
            get_button(label="Dislike", color="negative"),
            get_button(label="NEED MORE", color="secondary")
        ]
    ]
#—Ç—É—Ç –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è
}

likeboard = json.dumps(likeboard, ensure_ascii=False).encode('utf-8')
likeboard = str(likeboard.decode('utf-8'))

tags = [
    "[CLUB188217821|–•–ï–ù–¢–ê–ô]",
    "[CLUB188217821|HENTAI]",
    "[CLUB188217821|@CLUB188217821]",
    "@CLUB188217821"
]

con = pymysql.connect(tokens.serverdb, tokens.userdb, 
    tokens.passworddb, tokens.dbname)

print("STARTED")
#log("‚úÖ Hentai Bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω ‚úÖ")
for event in longpoll.listen():
    if(event.type == VkBotEventType.MESSAGE_NEW):

        text = event.object.text.upper()
        for tag in tags:
            text = text.replace(tag, '').strip()

        if(text == "–ü–†–ò–í–ï–¢" or text == "–•–ê–ô" or text == "–î–ê–†–û–í" or text == "–ü–†–ò–í" or text == "–ü–†–ò–í–ï–¢ –í–°–ï–ú" or text == "–í–°–ï–ú –ü–†–ò–í–ï–¢"):
            write_msg(event.object.peer_id, hello[randint(0,len(hello)-1)])
        elif(text=="–•–ï–ù–¢–ê–ô"):
            write_msg(event.object.peer_id, otvet[randint(0,len(otvet)-1)])
        elif(text=="/RULES"):
            vk.method('messages.send', {'peer_id': event.object.peer_id, 'message': "‚ú® –ü—Ä–∞–≤–∏–ª–∞ –±–µ—Å–µ–¥—ã ‚ú®\nüëâüèª –ù–µ–ª—å–∑—è –∫–∏–∫–∞—Ç—å –±–µ–∑ –≤–µ—Å–æ–º–æ–π –ø—Ä–∏—á–∏–Ω—ã\nüëâüèª –ù–µ–ª—å–∑—è –ø–∏–∞—Ä–∏—Ç—å\nüëâüèª –ù–µ–ª—å–∑—è —Å–ø–∞–º–∏—Ç—å (–∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥)\n‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: /xxx, /hentai, /—Ö–µ–Ω—Ç–∞–π\nüí¨ –ü–æ–º–æ—â—å: /help\nüó£ –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ: –ü—Ä–∏–≤–µ—Ç, –•–µ–Ω—Ç–∞–π, –•–µ–Ω—Ç–∞–π –ø–∏–∫—á–∏\nüîû –ü—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –ª–∏—Ü, —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç üîû", "random_id": randint(-2147483648, 2147483648)})
        elif(text=="/HELP"):
            vk.method('messages.send', {'peer_id': event.object.peer_id, 'message': "‚ú® –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ‚ú®\nüîπ /xxx\nüîπ /hentai\nüîπ /—Ö–µ–Ω—Ç–∞–π\nüîπ /manga\nüë§ –î–ª—è –∞–¥–º–∏–Ω–æ–≤:\nüîπ /admin (id)\nüîπ /unadmin (id)\nüîπ /manga add (url)\nüîπ /manga del (id)\nüîπ /pic (–∫–æ–ª-–≤–æ)\nüîπ /on –∏–ª–∏ /off\nüí¨ –ü–æ–º–æ—â—å:\nüîπ /rules\nüîπ /help\nüó£ –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ:\nüîπ –ü—Ä–∏–≤–µ—Ç\nüîπ –•–µ–Ω—Ç–∞–π\nüîπ –•–µ–Ω—Ç–∞–π –ø–∏–∫—á–∏\nüîû –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ 18 –ª–µ—Ç üîû", "random_id": randint(-2147483648, 2147483648)})
        elif(text=="–•–ï–ù–¢–ê–ô –ü–ò–ö–ß–ò"):
            write_msg(event.object.peer_id, "–£ –º–µ–Ω—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —É–∂–µ " + str(pic) + " –∫–∞—Ä—Ç–∏–Ω–æ–∫ üòâ")
        elif(text=="/PEER"):
            write_msg(event.object.peer_id, "PeerID —ç—Ç–æ–π –±–µ—Å–µ–¥—ã: " + str(event.object.peer_id))
        elif(event.object.text.split(' ')[0].upper()=="/UNADMIN" and len(event.object.text.split(' ')) == 2):
            if(str(event.object.from_id) == "501702167"):
                try:
                    os.remove("./admins/"+str(event.object.text.split(' ')[1]))
                    write_msg(event.object.peer_id, "–ê–¥–º–∏–Ω–∫–∞ –æ—Ç–æ–±—Ä–∞–Ω–∞")
                except:
                    write_msg(event.object.peer_id, "–ê–¥–º–∏–Ω–∫–∏ —É —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –Ω–µ –±—ã–ª–æ!")
            else:
                write_msg(event.object.peer_id, "–£ –≤–∞—Å –Ω–µ—Ç –Ω–∞ —ç—Ç–æ –ø—Ä–∞–≤!")
        elif(event.object.text.split(' ')[0].upper()=="/ADMIN" and len(event.object.text.split(' ')) == 2):
            if(str(event.object.from_id) == "501702167"):
                f = open("./admins/"+str(event.object.text.split(' ')[1]), "w")
                f.close()
                write_msg(event.object.peer_id, "–ê–¥–º–∏–Ω–∫–∞ –≤—ã–¥–∞–Ω–∞")
            else:
                write_msg(event.object.peer_id, "–£ –≤–∞—Å –Ω–µ—Ç –Ω–∞ —ç—Ç–æ –ø—Ä–∞–≤!")
        elif(event.object.text.split(' ')[0].upper()=="/PIC" and len(event.object.text.split(' ')) == 2):
            if(isAdmin(event.object.from_id)):
                try:
                    f = open("./pic", "w")
                    f.write(event.object.text.split(' ')[1])
                    f.close()
                    pic = int(event.object.text.split(' ')[1])
                    write_msg(event.object.peer_id, "–ü–æ–ª—É—á–∏–ª–æ—Å—å :) –ö–æ–ª-–≤–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ " + str(pic))
                except:
                    write_msg(event.object.peer_id, "–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å :(")
            else:
                write_msg(event.object.peer_id, "–£ –≤–∞—Å –Ω–µ—Ç –Ω–∞ —ç—Ç–æ –ø—Ä–∞–≤!")
        elif(text=="/ON"):
            if(isAdmin(event.object.from_id)):
                f = open("./peers/"+str(event.object.peer_id), "w")
                f.close()
                connected_peers.append(int(event.object.peer_id))
                write_msg(event.object.peer_id, "–ë–µ—Å–µ–¥–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞")
            else:
                write_msg(event.object.peer_id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ—Å–µ–¥!")
        elif(text=="/OFF"):
            if(isAdmin(event.object.from_id)):
                os.remove("./peers/" + str(event.object.peer_id))
                write_msg(event.object.peer_id, "–ë–µ—Å–µ–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
            else:
                write_msg(event.object.peer_id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–µ—Å–µ–¥!")
        elif(len(event.object.text.split(' ')) == 3 and event.object.text.split(' ')[0].upper()=="/MANGA" and event.object.text.split(' ')[1].upper()=="DEL"):
            if(isAdmin(event.object.from_id)):
                f = open("./peers/"+str(event.object.peer_id), "w")
                f.close()
                manga_id = int(event.object.text.split(' ')[2])
                manga.remove(manga[manga_id])
                f = open("./manga", "w")
                for url in manga:
                    f.write(url+'\n')
                f.close()
                write_msg(event.object.peer_id, "–ú–∞–Ω–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
            else:
                write_msg(event.object.peer_id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º!")
        elif(len(event.object.text.split(' ')) == 3 and event.object.text.split(' ')[0].upper()=="/MANGA" and event.object.text.split(' ')[1].upper()=="ADD"):
            if(isAdmin(event.object.from_id)):
                f = open("./peers/"+str(event.object.peer_id), "w")
                f.close()
                manga.append(event.object.text.split(' ')[2])
                f = open("./manga", "a")
                for url in manga:
                    f.write(url+'\n')
                f.close()
                write_msg(event.object.peer_id, f"–ú–∞–Ω–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\nüîë MangaID: {len(manga)}")
            else:
                write_msg(event.object.peer_id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º!")
        elif(text=="/MANGA" or text=="/–ú–ê–ù–ì–ê"):
            try:
                f = open("./peers/" + str(event.object.peer_id), "r")
                f.close()
                manga_id = randint(0, len(manga)-1)
                write_msg(event.object.peer_id, f"üîû –°–ª—É—á–∞–π–Ω–∞—è —Ö–µ–Ω—Ç–∞–π –º–∞–Ω–≥–∞ –∏–∑ –±–∞–∑—ã: {manga[manga_id]}\nüîë MangaID: {str(manga_id+1)}")
            except Exception as error:
                print(error)
                write_msg(event.object.peer_id, "–≠—Ç–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞! :(")
        elif(text == "NEED MORE" or text=="/XXX" or text=="/–•–•–•" or text=="/HENTAI" or text=="/–•–ï–ù–¢–ê–ô"):
            try:
                f = open("./peers/" + str(event.object.peer_id), "r")
                f.close()
                while True:
                    #photo-188217821_457239***
                    pic_id = randint(457239022, 457239022 + pic)

                    ###EXCEPT BLOCK###
                    if(pic_id > 457239275 and pic_id < 457239574):
                        continue
                    ###EEXCEPT BLOCK###

                    break
                pic_url = "photo-188217821_" + str(pic_id)
                print(pic_url)

                likeboard = {
                    "inline": True, 
                    "buttons": [
                        [
                            get_button(label=f"Like {pic_id}", color="positive"),    
                            get_button(label=f"Dislike {pic_id}", color="negative"),
                            get_button(label="NEED MORE", color="secondary")
                        ]
                    ]
                #—Ç—É—Ç –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è
                }

                likeboard = json.dumps(likeboard, ensure_ascii=False).encode('utf-8')
                likeboard = str(likeboard.decode('utf-8'))

                con = pymysql.connect(tokens.serverdb, tokens.userdb, 
                    tokens.passworddb, tokens.dbname)
                cur = con.cursor()
                cur.execute("SELECT `likes`, `dislikes` FROM `photos` WHERE id = " + str(pic_id))
                info = cur.fetchall()

                if(len(info) != 0):
                    send_pic(event.object.peer_id, pic_url, likeboard, info[0][0], info[0][1])
                else:
                    send_pic(event.object.peer_id, pic_url, likeboard, 0, 0)

                del likeboard
            except Exception as error:
                print(error)
                write_msg(event.object.peer_id, "–≠—Ç–∞ –±–µ—Å–µ–¥–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞! :(")
        elif(text.split(' ')[0] == 'DISLIKE' and len(text.split(' ')) > 1):
            con = pymysql.connect(tokens.serverdb, tokens.userdb, 
                tokens.passworddb, tokens.dbname)
            cur = con.cursor()
            cur.execute("SELECT `users` FROM `photos` WHERE id = " + text.split(' ')[1])
            info = cur.fetchall()

            if(len(info) != 0):
                liked = False
                for user in info[0][0].split(','):
                    if(user == str(event.object.from_id)):
                        write_msg(event.object.peer_id, f"–í—ã —É–∂–µ –æ—Ü–µ–Ω–∏–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ!")
                        liked = True
                if(liked): 
                    continue

                sql = 'UPDATE `photos` SET `likes` = `dislikes` + 1 where id = ' + text.split(' ')[1] + ';'
                cur.execute(sql)
                sql = f"UPDATE `photos` SET `users` = CONCAT(`users`, ',', \"{str(event.object.from_id)}\") where id = {text.split(' ')[1]};"
                cur.execute(sql)
                con.commit()
                con.close()
                write_msg(event.object.peer_id, f"üíî –û—Ç–º–µ—Ç–∫–∞ <<–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è>> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            else:
                sql = f"INSERT INTO `photos` VALUES ({text.split(' ')[1]}, 0, 1, {str(event.object.from_id)});"
                cur.execute(sql)
                con.commit()
                con.close()
                write_msg(event.object.peer_id, f"üíî –û—Ç–º–µ—Ç–∫–∞ <<–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è>> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        elif(text.split(' ')[0] == 'LIKE' and len(text.split(' ')) > 1):
            con = pymysql.connect(tokens.serverdb, tokens.userdb, 
                tokens.passworddb, tokens.dbname)
            cur = con.cursor()
            cur.execute("SELECT `users` FROM `photos` WHERE id = " + text.split(' ')[1])
            info = cur.fetchall()

            if(len(info) != 0):
                liked = False
                for user in info[0][0].split(','):
                    if(user == str(event.object.from_id)):
                        write_msg(event.object.peer_id, f"–í—ã —É–∂–µ –æ—Ü–µ–Ω–∏–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ!")
                        liked = True
                if(liked): 
                    continue

                sql = 'UPDATE `photos` SET `likes` = `likes` + 1 where id = ' + text.split(' ')[1] + ';'
                cur.execute(sql)
                sql = f"UPDATE `photos` SET `users` = CONCAT(`users`, ',', \"{str(event.object.from_id)}\") where id = {text.split(' ')[1]};"
                cur.execute(sql)
                con.commit()
                con.close()
                write_msg(event.object.peer_id, f"‚ù§ –û—Ç–º–µ—Ç–∫–∞ <<–ù—Ä–∞–≤–∏—Ç—Å—è>> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            else:
                sql = f"INSERT INTO `photos` VALUES ({text.split(' ')[1]}, 1, 0, {str(event.object.from_id)});"
                cur.execute(sql)
                con.commit()
                con.close()
                write_msg(event.object.peer_id, f"‚ù§ –û—Ç–º–µ—Ç–∫–∞ <<–ù—Ä–∞–≤–∏—Ç—Å—è>> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        elif text=='/TEST':
            try:
                write_msg(event.object.peer_id, "–í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç :)")
            except Exception as e:
                print(e)
